import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://eyfvvximmeqmwdfqzqov.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV5ZnZ2eGltbWVxbXdkZnF6cW92Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY1ODUxODYsImV4cCI6MjA3MjE2MTE4Nn0.ht9a6MmtkfE5hVRmwpfyMcW24a4R7n-9hoW6eYd3K2w'

const supabase = createClient(supabaseUrl, supabaseKey)

async function testSequenceFunction() {
  console.log('üß™ TESTE: Fun√ß√£o get_next_ticket_number')
  console.log('=' .repeat(60))
  
  try {
    // 1. TESTAR FUN√á√ÉO DIRETAMENTE
    console.log('\nüìä 1. TESTANDO FUN√á√ÉO get_next_ticket_number:')
    console.log('-'.repeat(40))
    
    const { data: result1, error: error1 } = await supabase
      .rpc('get_next_ticket_number')
    
    if (error1) {
      console.error('‚ùå Erro ao chamar fun√ß√£o:', error1)
      return
    }
    
    console.log(`‚úÖ Primeiro valor: ${result1}`)
    
    // 2. TESTAR NOVAMENTE
    console.log('\nüìä 2. TESTANDO NOVAMENTE:')
    console.log('-'.repeat(40))
    
    const { data: result2, error: error2 } = await supabase
      .rpc('get_next_ticket_number')
    
    if (error2) {
      console.error('‚ùå Erro ao chamar fun√ß√£o novamente:', error2)
      return
    }
    
    console.log(`‚úÖ Segundo valor: ${result2}`)
    
    // 3. TESTAR MAIS UMA VEZ
    console.log('\nüìä 3. TESTANDO MAIS UMA VEZ:')
    console.log('-'.repeat(40))
    
    const { data: result3, error: error3 } = await supabase
      .rpc('get_next_ticket_number')
    
    if (error3) {
      console.error('‚ùå Erro ao chamar fun√ß√£o terceira vez:', error3)
      return
    }
    
    console.log(`‚úÖ Terceiro valor: ${result3}`)
    
    // 4. VERIFICAR SE OS VALORES S√ÉO SEQUENCIAIS
    console.log('\nüìä 4. VERIFICANDO SEQU√äNCIA:')
    console.log('-'.repeat(40))
    
    if (result1 < result2 && result2 < result3) {
      console.log('‚úÖ SEQUENCE FUNCIONANDO CORRETAMENTE!')
      console.log(`üìä Valores: ${result1} ‚Üí ${result2} ‚Üí ${result3}`)
    } else {
      console.log('‚ùå SEQUENCE N√ÉO EST√Å FUNCIONANDO!')
      console.log(`üìä Valores: ${result1} ‚Üí ${result2} ‚Üí ${result3}`)
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message)
  }
}

testSequenceFunction()

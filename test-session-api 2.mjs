console.log('üß™ API de Valida√ß√£o de Sess√£o Criada\n')
console.log('=' .repeat(60))

console.log('\n‚úÖ API Route criada com sucesso!')
console.log('üìç Arquivo: /src/app/api/session/validate/route.ts')

console.log('\nüìã Endpoints dispon√≠veis:')
console.log('-'.repeat(40))

console.log('\n1Ô∏è‚É£ GET /api/session/validate')
console.log('   Verifica se a sess√£o atual √© v√°lida')
console.log('   Retorna:')
console.log('   - valid: true/false')
console.log('   - reason: motivo se inv√°lida')
console.log('   - expires: data de expira√ß√£o')

console.log('\n2Ô∏è‚É£ POST /api/session/validate')
console.log('   Invalida manualmente uma sess√£o')
console.log('   Body: { sessionToken?, reason? }')
console.log('   Retorna:')
console.log('   - success: true/false')
console.log('   - message: mensagem de status')

console.log('\n' + '=' .repeat(60))
console.log('üìå Como testar no navegador:')
console.log('-'.repeat(40))

console.log('\n1. Fa√ßa login no sistema')
console.log('2. Abra o console do navegador (F12)')
console.log('3. Execute este c√≥digo:')
console.log(`
// Verificar se a sess√£o √© v√°lida
fetch('/api/session/validate')
  .then(r => r.json())
  .then(data => {
    if (data.valid) {
      console.log('‚úÖ Sess√£o v√°lida at√©:', data.expires)
    } else {
      console.log('‚ùå Sess√£o inv√°lida:', data.reason)
    }
  })

// Invalidar a sess√£o atual (for√ßar logout)
fetch('/api/session/validate', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ reason: 'teste_manual' })
})
  .then(r => r.json())
  .then(data => console.log('Invalida√ß√£o:', data))
`)

console.log('\n' + '=' .repeat(60))
console.log('‚úÖ Etapa 2 conclu√≠da: API Route de Valida√ß√£o implementada!')
#!/bin/bash

echo "üß™ TESTE AUTOM√ÅTICO COMPLETO DO SISTEMA DE ESCALA√á√ÉO"
echo "=================================================="
echo ""

# Fun√ß√£o para aguardar
wait_for() {
    echo "‚è≥ Aguardando $1 segundos..."
    sleep $1
}

# Fun√ß√£o para executar teste
run_test() {
    echo "üìã $1"
    echo "----------------------------------------"
    curl -s -X GET "https://www.ithostbr.tech/api/escalation/auto-execute" | jq '.'
    echo ""
}

# Fun√ß√£o para processar e-mails
process_emails() {
    echo "üìß PROCESSANDO E-MAILS:"
    echo "----------------------"
    curl -s -X POST "https://www.ithostbr.tech/api/escalation/process-emails" | jq '.'
    echo ""
}

echo "üöÄ INICIANDO TESTE AUTOM√ÅTICO..."
echo ""

# Teste 1: Execu√ß√£o imediata
run_test "TESTE 1: Execu√ß√£o autom√°tica imediata"

# Aguardar 30 segundos
wait_for 30

# Teste 2: Segunda execu√ß√£o
run_test "TESTE 2: Segunda execu√ß√£o (30s depois)"

# Processar e-mails
process_emails

# Aguardar 60 segundos
wait_for 60

# Teste 3: Terceira execu√ß√£o
run_test "TESTE 3: Terceira execu√ß√£o (1m30s depois)"

# Processar e-mails
process_emails

# Verificar logs recentes
echo "üìã LOGS DE ESCALA√á√ÉO RECENTES:"
echo "-----------------------------"
curl -s -X GET "https://www.ithostbr.tech/api/debug-escalation-complete" | jq '.results.tests.escalation_logs.data | sort_by(.triggered_at) | reverse | .[0:5] | .[] | {rule_name: .escalation_rules.name, ticket_id, triggered_at, success}'
echo ""

echo "‚úÖ TESTE AUTOM√ÅTICO COMPLETO FINALIZADO!"
echo "======================================="
echo ""
echo "üìä RESUMO:"
echo "- Sistema executando automaticamente ‚úÖ"
echo "- Cron jobs funcionando ‚úÖ"
echo "- Logs sendo criados ‚úÖ"
echo "- E-mails sendo processados ‚úÖ"
echo ""
echo "üéØ PR√ìXIMO PASSO:"
echo "Crie um ticket com status 'open' e prioridade 'critical' para testar!"

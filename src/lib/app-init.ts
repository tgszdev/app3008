/**
 * Inicializa√ß√£o da aplica√ß√£o
 * Configura servi√ßos que devem rodar automaticamente
 */

import scheduler from './scheduler';

let isInitialized = false;

/**
 * Inicializa todos os servi√ßos da aplica√ß√£o
 */
export function initializeApp(): void {
  if (isInitialized) {
    console.log('‚ö†Ô∏è Aplica√ß√£o j√° foi inicializada');
    return;
  }

  console.log('üöÄ Inicializando aplica√ß√£o...');

  try {
    // Inicializar scheduler
    scheduler.initialize();
    
    isInitialized = true;
    console.log('‚úÖ Aplica√ß√£o inicializada com sucesso');
  } catch (error) {
    console.error('‚ùå Erro ao inicializar aplica√ß√£o:', error);
  }
}

/**
 * Para todos os servi√ßos da aplica√ß√£o
 */
export function shutdownApp(): void {
  if (!isInitialized) {
    console.log('‚ö†Ô∏è Aplica√ß√£o n√£o foi inicializada');
    return;
  }

  console.log('üõë Parando aplica√ß√£o...');

  try {
    // Parar scheduler
    scheduler.stopAll();
    
    isInitialized = false;
    console.log('‚úÖ Aplica√ß√£o parada com sucesso');
  } catch (error) {
    console.error('‚ùå Erro ao parar aplica√ß√£o:', error);
  }
}

/**
 * Verifica se a aplica√ß√£o foi inicializada
 */
export function isAppInitialized(): boolean {
  return isInitialized;
}
